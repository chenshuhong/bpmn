export default {

  // Labels
  'Activate the global connect tool' : '激活全局连接工具',
  'Append {type}': '追加 {type}',
  'Add Lane above': '在上面添加泳道',
  'Divide into two Lanes': '分为两个泳道',
  'Divide into three Lanes': '分为三个泳道',
  'Add Lane below': '在下面添加泳道',
  'Append compensation activity': '追加补偿活动',
  'Change type': '改变类型',
  'Connect using Association': '使用关联连接',
  'Connect using Sequence/MessageFlow or Association': '使用序列/消息流或关联进行连接',
  'Connect using DataInputAssociation': '使用数据关联连接',
  'Remove': '删除',
  'Activate the hand tool': '激活手型工具',
  'Activate the lasso tool': '激活套索工具',
  'Activate the create/remove space tool': '激活创建/删除空间工具',
  'Create expanded SubProcess': '创建扩展子进程',
  'Create IntermediateThrowEvent/BoundaryEvent' : '创建 中间事件/边界事件',
  'Create Pool/Participant': '创建 池/参加者',
  'Parallel Multi Instance': '并行多实例',
  'Sequential Multi Instance': '串行多实例',
  'Loop': '循环',
  'Ad-hoc': 'Ad-hoc',
  'Create {type}': '创建 {type}',
  'Task': '任务',
  'Send Task': '发送任务',
  'Receive Task': '接收任务',
  'User Task': '用户任务',
  'Manual Task': '手动任务',
  'Business Rule Task': '业务规则任务',
  'Service Task': '服务任务',
  'Script Task': '脚本任务',
  'Call Activity': '调用活动',
  'Sub Process (collapsed)': '子流程（折叠）',
  'Start Event': '开始事件',
  'Intermediate Throw Event': '中间抛出事件',
  'End Event': '结束事件',
  'Message Start Event': '消息开始事件',
  'Timer Start Event': '定时器启动事件',
  'Conditional Start Event': '条件开始事件',
  'Signal Start Event': '信号开始事件',
  'Error Start Event': '错误开始事件',
  'Escalation Start Event': '升级开始事件',
  'Compensation Start Event': '补偿开始事件',
  'Message Start Event (non-interrupting)': '消息开始事件 (非人工)',
  'Timer Start Event (non-interrupting)': '定时器开始事件（非人工）',
  'Conditional Start Event (non-interrupting)': '条件开始事件 (非人工)',
  'Signal Start Event (non-interrupting)': '信号开始事件 (非人工)',
  'Escalation Start Event (non-interrupting)': '升级开始事件 (非人工)',
  'Message Intermediate Catch Event': '中间消息捕捉事件',
  'Message Intermediate Throw Event': '中间消息抛出事件',
  'Timer Intermediate Catch Event': '中间定时器捕捉事件',
  'Escalation Intermediate Throw Event': '升级中间抛出事件',
  'Conditional Intermediate Catch Event': '条件中间捕捉事件',
  'Link Intermediate Catch Event': '连接中间捕捉事件',
  'Link Intermediate Throw Event': '连接中间抛出事件',
  'Compensation Intermediate Throw Event': '补偿中间抛出事件',
  'Signal Intermediate Catch Event': '中间信号捕捉事件',
  'Signal Intermediate Throw Event': '中间信号抛出事件',
  'Message End Event': '消息结束事件',
  'Escalation End Event': '升级结束事件',
  'Error End Event': '错误结束事件',
  'Cancel End Event': '取消结束事件',
  'Compensation End Event': '补偿结束事件',
  'Signal End Event': '信号结束事件',
  'Terminate End Event': '终止结束事件',
  'Message Boundary Event': '边界消息事件',
  'Message Boundary Event (non-interrupting)': '边界消息事件 (非人工)',
  'Timer Boundary Event': '边界定时事件',
  'Timer Boundary Event (non-interrupting)': '边界定时事件 (非人工)',
  'Escalation Boundary Event': '升级边界事件',
  'Escalation Boundary Event (non-interrupting)': '升级边界事件 (非人工)',
  'Conditional Boundary Event': '边界条件事件',
  'Conditional Boundary Event (non-interrupting)': '边界条件事件 (非人工)',
  'Error Boundary Event': '边界错误事件',
  'Cancel Boundary Event': '边界取消事件',
  'Signal Boundary Event': '边界信号事件',
  'Signal Boundary Event (non-interrupting)': '边界信号事件 (非人工)',
  'Compensation Boundary Event': '边界补偿事件',
  'Exclusive Gateway': '互斥网关',
  'Parallel Gateway': '并行网关',
  'Inclusive Gateway': '包容性网关',
  'Complex Gateway': '复杂网关',
  'Event based Gateway': '事件网关',
  'Transaction': '交易',
  'Sub Process': '子流程',
  'Event Sub Process': '事件子流程',
  'Collapsed Pool': 'Collapsed Pool',
  'Expanded Pool': '扩展池',

  // Errors
  'no parent for {element} in {parent}': '{element}在{parent}没有父元素',
  'no shape type specified': '没有指定形状类型',
  'flow elements must be children of pools/participants': '流元素必须是池/参与者的子元素',
  'out of bounds release': '越界释放',
  'more than {count} child lanes': '超过{count}子专用道',
  'element required': '需要先有个元素',
  'diagram not part of bpmn:Definitions': '图不是bpmn:Definitions的一部分',
  'no diagram to display': '没有图可以展示',
  'no process or collaboration to display': '没有要显示的过程或协作',
  'element {element} referenced by {referenced}#{property} not yet drawn': '{referenced}#{property}引用的元素{element}尚未绘制',
  'already rendered {element}': '{element}已经渲染',
  'failed to import {element}': '导入{element}失败',
  
  //property panel
  'General':'通用',
  'Variables':'变量',
  'Forms':'表单',
  'Listeners':'监听器',
  'Input/Output':'输入/输出',
  'Details':'详情',
  'Documentation':'文档',
  'Executable':'可执行',
  'description':'描述',
  'Name':'名称',
  'processIdDescription':'进程id描述',
  'Parameters':'参数',
  'Properties':'属性',
  'Connector':'连接器',
  'Extensions':'扩展',
  'Condition':'条件',
  'Expression':'表达式',
  'Script':'脚本',
  'Type':'类型',
  'Label':'标签',
  'Values':'值',
  'Validation':'校验',
  'Config':'配置',
  'Value':'值',
  'Exclusive':'独家',
  'Binding':'绑定',
  'Version':'版本',
  'Class':'类',
  'Topic':'话题',
  'Fields':'字段',
  'String':'字符串',
  'External':'可扩展的',
  'Implementation':'实现',
  'Map':'映射',
  'List':'列表',
  'Collection':'集合',
  'Initiator':'引发',
  'Assignee':'代理',
  'Priority':'优先',
  'Local':'本地',
  'Target':'目标',
  'Element Documentation':'元素文档',
  'Process Documentation':'进程文档',
  'Link Name':'链接名称',
  'Process Id':'进程id',
  'Process Name':'进程名称',
  'Input Parameter':'输入参数',
  'Output Parameter':'输出参数',
  'Execution Listener':'执行监听器',
  'Task Listener':'任务监听器',
  'Multi Instance':'多实例',
  'Asynchronous Continuations':'异步后续传递',
  'Job Configuration':'工作配置',
  'External Task Configuration':'外部任务配置',
  'Candidate Starter Configuration':'候选初学者配置',
  'History Configuration':'历史配置',
  'Field Injection':'字段注射',
  'Field Injections':'字段注射',
  'Element Template':'元素模板',
  'Custom Fields':'自定义字段',
  'Custom Fields for scope: ':'范围的自定义字段',
  'CallActivity Type':'调用活动类型',
  'Condition Type':'条件类型',
  'Connector Id':'连接器id',
  'Must provide a value':'必须提供一个值',
  'Form Key':'表单的键',
  'Business Key':'业务的键',
  'Default Value':'默认值',
  'Add Constraint':'添加约束',
  'Asynchronous Before':'异步前',
  'Asynchronous After':'异步后',
  'Called Element':'调用的元素',
  'Case Ref':'案例参考',
  'Decision Ref':'决定参考',
  'Must provide a value.':'必须提供一个值',
  'Version Tag':'版本标签',
  'Tenant Id':'租户Id',
  'Business Key Expression':'业务键表达式',
  'Map Decision Result':'映射决策结果',
  'Delegate Variable Mapping':'委托变量映射',
  'Delegate Expression':'委托表达式',
  'Candidate Starter Groups':'候选初学者组',
  'Candidate Starter Users':'候选初学者用户',
  'Java Class':'Java类',
  'Task Priority':'任务优先级',
  'Name must not contain spaces':'名称不得包含空格',
  'Parameter must have a name':'参数必须具有名称',
  'History Time To Live':'历史配置存在时间',
  'Input Parameters':'输入参数',
  'Output Parameters':'输出参数',
  'Job Priority':'工作重点',
  'Retry Time Cycle':'重试时间周期',
  'Must provide either loop cardinality or collection':'必须提供循环基数或集合',
  'Loop Cardinality':'循环基数',
  'Element Variable':'元素变量',
  'Completion Condition':'完成条件',
  'Add Property':'添加属性',
  'Result Variable':'结果变量',
  'Event Type':'事件类型',
  'Listener Type':'监听器类型',
  'Multi Instance ':'多实例',
  'Configure Connector':'配置连接器',
  'Candidate Users':'候选用户',
  'Candidate Groups':'候选组',
  'Due Date':'截止日期',
  'Follow Up Date':'跟进日期',
  'In Mapping':'在映射中',
  'Out Mapping':'不在映射中',
  'The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)':'截止日期为EL表达式(例如${someDate}或者ISO日期(例如2015-06-26T09:54:00)',
};
